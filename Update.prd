Product Requirements Document (PRD)
Anywhere App - Feature Enhancement
Executive Summary
This PRD outlines three major feature enhancements for the Anywhere note-taking application:

Hand Tool for canvas navigation
Smart alignment guides with snapping
Media embedding support (images and GIFs)
These features will significantly improve the user experience by providing better canvas navigation, precise note positioning, and richer content creation capabilities.

Feature 1: Hand Tool for Canvas Navigation
Overview
Implement a hand tool that allows users to pan and navigate the canvas by clicking and dragging, similar to design tools like Photoshop or Figma.

User Stories
As a user, I want to quickly pan around my canvas to view different areas of my notes
As a user, I want to use the V hotkey to quickly switch to the hand tool
As a user, I want visual feedback when the hand tool is active
Functional Requirements
Tool Activation
Hotkey: Press 'V' to toggle hand tool mode
Visual indicator in toolbar showing hand tool is active
Cursor changes to grabbing hand icon when active
Spacebar temporary activation (hold spacebar for temporary hand tool)
Canvas Panning
Click and drag to pan the canvas view
Smooth scrolling/panning animation
Momentum-based scrolling (optional: canvas continues moving slightly after release)
Works with both mouse and trackpad
Tool States
Default state: Crosshair cursor (current behavior)
Hand tool inactive: Open hand cursor
Hand tool dragging: Closed/grabbing hand cursor
Integration Requirements
Disable note creation when hand tool is active
Disable text selection when panning
Allow quick toggle between hand tool and selection modes
Remember last tool state when switching documents
Technical Considerations
Store canvas offset position (x, y translation)
Update all note positions relative to canvas offset
Ensure performant rendering during pan operations
Handle boundary conditions (limit panning range if needed)
Feature 2: Smart Alignment Guides & Snapping
Overview
Implement intelligent alignment guides that appear when moving notes, helping users align content precisely with visual guides and optional snapping.

User Stories
As a user, I want to see alignment guides when positioning notes
As a user, I want my notes to snap to alignment points for perfect positioning
As a user, I want to align multiple notes easily
Functional Requirements
Alignment Guide Display
Show vertical guides when note edges/centers align with other notes
Show horizontal guides when note edges/centers align with other notes
Display measurements/distances between notes (optional)
Color-coded guides (e.g., red for center alignment, blue for edge alignment)
Snapping Behavior
Snap threshold: 8-10 pixels proximity
Snap to note edges (top, bottom, left, right)
Snap to note centers (vertical and horizontal)
Snap to equal spacing between notes
Toggle snapping on/off (Alt/Option key to temporarily disable)
Guide Types
Edge alignment guides
Center alignment guides
Equal spacing guides
Canvas center guides
Grid snapping (optional future enhancement)
Performance Requirements
Calculate alignments only for visible notes
Debounce alignment calculations during rapid movement
Smooth guide appearance/disappearance animations
Maximum 60fps during drag operations
Technical Considerations
Efficient collision detection algorithm
R-tree or spatial indexing for large numbers of notes
Canvas layer for rendering guides (separate from notes)
Store note bounding boxes for quick calculations
Feature 3: Media Embedding (Images & GIFs)
Overview
Enable users to embed images and GIFs directly into the canvas, treating them as first-class objects alongside text notes.

User Stories
As a user, I want to paste images from my clipboard onto the canvas
As a user, I want to drag and drop image files onto the canvas
As a user, I want to resize and position embedded media
As a user, I want to embed GIFs that play automatically
Functional Requirements
Media Input Methods
Paste from clipboard (Ctrl/Cmd+V)
Drag and drop files from file system
URL input for remote images/GIFs
Upload button in toolbar
Support formats: JPEG, PNG, GIF, WebP, SVG
Media Object Behavior
Positioned absolutely like notes
Resizable with corner/edge handles
Maintain aspect ratio by default (Shift to free transform)
Selectable and movable like notes
Can be part of multi-selection
Delete with Delete/Backspace keys
Media Display Options
Set maximum initial size (e.g., 500px max dimension)
Border/shadow styling options
Opacity adjustment
Click to view full size (lightbox mode)
GIF playback controls (play/pause on hover)
Storage & Performance
Convert images to base64 for localStorage
Implement size limits (e.g., 5MB per image)
Lazy loading for performance
Thumbnail generation for large images
Compress images before storage
Technical Considerations
FileReader API for local file handling
Canvas or Image element rendering
Base64 encoding/decoding for persistence
Image optimization library integration
Consider IndexedDB for larger storage needs
Implementation Plan: 3-Agent Approach
Agent 1: Hand Tool Implementation
Scope: Canvas navigation and hand tool functionality

Tasks:

Create hand tool button in toolbar UI
Implement V hotkey and spacebar activation
Add canvas translation state management
Implement click-and-drag panning logic
Update cursor states and visual feedback
Adjust note rendering for canvas offset
Add momentum scrolling (optional)
Test with existing selection/creation features
Dependencies: None (can work independently)

Estimated Complexity: Medium

Key Files to Modify:

app.ts: Add hand tool state, pan logic, hotkey handling
styles.css: Add hand tool cursor styles
index.html: Add hand tool button to toolbar
Agent 2: Alignment System Implementation
Scope: Smart guides and snapping functionality

Tasks:

Create alignment calculation engine
Implement guide rendering layer
Add snap detection during drag operations
Create guide line visual components
Implement different guide types (edge, center)
Add settings for snap threshold
Optimize performance for many notes
Add hotkey for toggling snapping
Dependencies: Should coordinate with Agent 1 for canvas offset calculations

Estimated Complexity: High

Key Files to Modify:

app.ts: Add alignment logic, guide rendering, snap calculations
styles.css: Add guide line styles
New file: alignment.ts for alignment engine
Agent 3: Media Embedding Implementation
Scope: Image and GIF support

Tasks:

Implement drag-and-drop handling
Add clipboard paste for images
Create media note type/class
Implement resize handles UI
Add base64 conversion and storage
Implement GIF playback controls
Add media toolbar buttons
Create lightbox view component
Handle storage limits and compression
Dependencies: Needs to integrate with selection system from base code

Estimated Complexity: High

Key Files to Modify:

app.ts: Add media handling, new note types
styles.css: Add media element styles
index.html: Add media upload UI elements
New file: media.ts for media-specific logic
Testing Requirements
Hand Tool Testing
Verify V hotkey activation
Test spacebar temporary activation
Ensure smooth panning performance
Test interaction with note selection
Verify cursor state changes
Test on touch devices
Alignment Testing
Test guide appearance at correct positions
Verify snapping at threshold distance
Test with multiple notes
Performance test with 100+ notes
Test disable snapping with modifier key
Verify guide cleanup after movement
Media Testing
Test all input methods (paste, drag, upload)
Verify format support
Test size limits and compression
Verify GIF playback
Test resize with aspect ratio
Test localStorage limits
Verify selection and deletion
Success Metrics
Canvas navigation time reduced by 40%
Note alignment precision improved (< 5px variance)
User engagement with media features (>30% adoption)
Performance maintained (60fps during all operations)
No increase in storage errors
Feature discovery rate >50% within first week
Future Enhancements
Grid snapping system
Rulers and measurements
Video embedding support
Cloud storage for media
Collaborative cursor tracking
Canvas zoom functionality
Smart layout suggestions
Audio note support
